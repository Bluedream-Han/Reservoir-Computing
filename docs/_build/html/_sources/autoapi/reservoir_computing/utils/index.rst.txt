:py:mod:`reservoir_computing.utils`
===================================

.. py:module:: reservoir_computing.utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   reservoir_computing.utils.compute_test_scores
   reservoir_computing.utils.forecasting_datasets



.. py:function:: compute_test_scores(pred_class, Yte)

   Wrapper to compute classification accuracy and F1 score

   Parameters:
   -----------
   pred_class : np.ndarray
       Predicted class labels
   Yte : np.ndarray
       True class labels

   Returns:
   --------
   accuracy : float
       Classification accuracy
   f1 : float
       F1 score


.. py:function:: forecasting_datasets(X, horizon, test_percent=0.15, val_percent=0.0, scaler=None)

   This function does the following:

   1. Splits the dataset in training, validation and test sets
   2. Shift the target data by 'horizon' to create the forecasting problem
   3. Normalizes the data

   Parameters:
   -----------
   X : np.ndarray
       Input data
   horizon : int
       Forecasting horizon
   test_percent : float
       Percentage of the data to be used for testing
   val_percent : float
       Percentage of the data to be used for validation
       If 0, no validation set is created
   scaler : a scaler object from sklearn.preprocessing
       Scaler object to normalize the data
       If None, a StandardScaler is created

   Returns:
   --------
   Xtr : np.ndarray
       Training input data
   Ytr : np.ndarray
       Training target data
   Xte : np.ndarray
       Test input data
   Yte : np.ndarray
       Test target data
   scaler : a scaler object from sklearn.preprocessing
       Scaler object used to normalize the data
   Xval : np.ndarray (optional)
       Validation input data
   Yval : np.ndarray (optional)
       Validation target data


